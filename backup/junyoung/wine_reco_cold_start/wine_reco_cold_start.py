# -*- coding: utf-8 -*-
"""wine_reco_survey.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/160JExO-muMXPILhwoWeV6uDFN6VmYxv7

df_wines = pd.read_json('Meta_with_cluster.json')

food_list = [
    'Poultry',  # 4 양계류
    'Pork',  # -> 2,4 (바디감에 따라 높으면 4번, 낮으면 2번)
    'Beef', # -> 2,4 (바디감 1번, 산미  4번)
    'Lamb', # 4 양

    'Rich fish (salmon, tuna etc)', # 생선 2
    'Shellfish', # 생선 2
    'Lean fish',  # 생선 -> 2,4 (바디감에 따라 높으면 4번, 낮으면 2번)

    'Spicy food', # -> 4
    'Pasta',  # -> 2,4 (바디감에 따라 높으면 4번, 낮으면 2번)
    'Mushrooms', # -> 4
    'Vegetarian', # -> 2

    'Aperitif' # 식전주 -> 2번 클러스터
    'Appetizers and snacks',  # 4번 클러스터

    'Sweet desserts', # 달달한 디저트  -> 4 -> 7번 와인
    'Fruity desserts', # 과일 디저트 -> 4 -> 7번 와인

    'Mild and soft cheese', # -> 2
    'Mature and hard cheese',#  -> 1
    'Blue cheese', # -> 4
]

def get_recommendation(mood, food, sweet, tannin, body, acidity, df_wines=df_wines):
    # inputs = [mood, ]
    # mood (1~6), food ('Pork', 'Lamb' etc), sweet, tannin, body, acidity
    if mood in [1, 2]:
        # 세영님 파트
        
        
        
        wine_ids = [123, 123]
        return wine_ids
    else:
        # 준영님 파트
        
        
        
        
        wine_ids = [123, 123]
        return wine_ids
    
result = get_recommendation(1, 'Pork', 3, 2, 3, 5)
"""

import numpy as np
import pandas as pd

from google.colab import drive
drive.mount('/content/drive')

df_wines = pd.read_json('/content/drive/MyDrive/tobigs14_conference/make_survey/Meta_with_cluster.json')

df_wines = pd.read_json('/content/drive/MyDrive/tobigs14_conference/make_survey/Meta_with_cluster.json')

food_list = [
    'Poultry',  # 4 양계류
    'Pork',  # -> 2,4 (바디감에 따라 높으면 4번, 낮으면 2번)
    'Beef', # -> 2,4 (바디감 1번, 산미  4번)
    'Lamb', # 4 양

    'Rich fish (salmon, tuna etc)', # 생선 2
    'Shellfish', # 생선 2
    'Lean fish',  # 생선 -> 2,4 (바디감에 따라 높으면 4번, 낮으면 2번)

    'Spicy food', # -> 4
    'Pasta',  # -> 2,4 (바디감에 따라 높으면 4번, 낮으면 2번)
    'Mushrooms', # -> 4
    'Vegetarian', # -> 2

    'Aperitif' # 식전주 -> 2번 클러스터
    'Appetizers and snacks',  # 4번 클러스터

    'Sweet desserts', # 달달한 디저트  -> 4 -> 7번 와인
    'Fruity desserts', # 과일 디저트 -> 4 -> 7번 와인

    'Mild and soft cheese', # -> 2
    'Mature and hard cheese',#  -> 1
    'Blue cheese', # -> 4
]

def get_recommendation(mood, food, sweet, tannin, body, acidity, df_wines=df_wines):
    # inputs = [mood, ]
    # mood (1~6), food ('Pork', 'Lamb' etc), sweet, tannin, body, acidity
    if mood in [1, 2]:
        if food in ['Poultry', 'Lamb']: # 1번 클러스터에 제일 많은데 왜 4번 클러스터라고 해놨지..?
            candidate = df_wines.loc[df_wines.cluster==4,:]

        elif food in ['Pork', 'Lean fish', 'Pasta']:
            if body > 3:
                candidate = df_wines.loc[df_wines.cluster==4,:]
            else:
                candidate = df_wines.loc[df_wines.cluster==2,:]

        elif food == 'Beef': # 1 or 4, 위에 잘못 써놓은 듯..? 우선 차이가 더 극명한 산미로 나눔
            if acidity > 3:
                candidate = df_wines.loc[df_wines.cluster==4,:]
            else:
                candidate = df_wines.loc[df_wines.cluster==1,:]
        

        elif food in ['Rich fish (salmon, tuna etc)', 'Shellfish', 'Vegetarian', 'Aperitif', 'Mild and soft cheese']:
            candidate = df_wines.loc[df_wines.cluster==2,:]
        
        elif food in ['Spicy food', 'Mushrooms', 'Appetizers and snacks', 'Blue cheese']: 
            candidate = df_wines.loc[df_wines.cluster==4,:]

        elif food in ['Sweet desserts', 'Fruity desserts']:
            candidate = df_wines.loc[(df_wines.cluster==4 & df_wines.type_id==7),:]

        elif food == 'Mature and hard cheese':
            candidate = df_wines.loc[df_wines.cluster==1,:]

        # 입력값을 바로 가중치로
        candidate['taste_score'] = sweet*candidate.sweetness + tannin*candidate.tannin + body*candidate.body + acidity*candidate.acidity
        candidate = candidate.sort_values('taste_score', ascending=False).copy()

        # 입력값이 중앙에서부터 먼 정도를 가중치로
        candidate['taste_score'] = abs(sweet-3)*candidate.sweetness + abs(tannin-3)*candidate.tannin + abs(body-3)*candidate.body + abs(acidity-3)*candidate.acidity
        candidate = candidate.sort_values('taste_score', ascending=False).copy()

        wine_ids = list(candidate.sort_values(['rating_average', 'review_count'], ascending=False)['wine_id'][:10].values)
        return wine_ids
    
    else:
        # 준영님 파트
        if mood == 3: #달콤한 분위기
            if food in ['Beef', 'Lamb', 'Pasta', 'Poultry', 'Shellfish', 'Vegetarian', 'Appetizers and snacks', 'Pork', 'Aperitif', 'Lean fish']:
                candidate = df_wines.loc[df_wines.cluster==3,:] # 위에 해당하는 음식이 있으면 3번 클러스터에서 추출
            else:
                candidate = df_wines # 위에 해당하는 음식이 아니면 전체

            

        elif mood == 4: # 디저트
         if food in ['Sweet desserts', 'Fruity desserts']:
            candidate = df_wines.loc[(df_wines.cluster==4 & df_wines.type_id==7),:]



 #           if food in 'Sweet desserts':
 #               candidate = df_wines.loc[(df_wines.cluster==4) & (df_wines.type_id==7),:] # 4번 클러스터에 디저트 와인중에서 추출
 #               inx_list=[]
 #               for k, i in enumerate(candidate['food']):
 #                   if 'Sweet desserts' in i: # sweet desserts 있는 것만 출력
 #                       inx_list.append(k)
 #               candidate=candidate.iloc[inx_list]
 #           elif food in 'Fruity desserts':
 #               candidate = df_wines.loc[(df_wines.cluster==4) & (df_wines.type_id==7),:] # 4번 클러스터에 디저트 와인중에서 추출
 #               inx_list=[]
 #               for k, i in enumerate(candidate['food']):
 #                   if 'Fruity desserts' in i: # Fruity desserts 있는 것만 출력
 #                       inx_list.append(k)
 #               candidate=candidate.iloc[inx_list]
                        
            else: # 'Sweet desserts', 'Fruity desserts'를 선택하지 않을 경우
                candidate = df_wines.loc[df_wines.cluster==4,:] #4번 클러스터 전체에서 출력
        
        elif mood == 5: # 파티용
            if food in ['Beef', 'Lamb', 'Pasta', 'Poultry', 'Shellfish', 'Vegetarian', 'Appetizers and snacks', 'Pork', 'Aperitif', 'Lean fish']:
                candidate = df_wines.loc[(df_wines.cluster==2) & (df_wines.type_id==3),:] # 3번 클러스터에 스파클링와인 중에서 추출
            else:
                candidate = df_wines.loc[df_wines.type_id==3,:] # 아니면 스파클링 와인중에서 추출
        elif mood == 6: #4번클러스터
            if food in ['Beef', 'Pork', 'Lamb', 'Poultry', 'Rich fish (salmon, tuna etc)', 'Shellfish' 'Spicy food', 'Vegetarian', 'Sweet desserts', 'Mild and soft cheese', 'Mature and hard cheese', 'Blue cheese']: #주정강화와인과 어울리는 음식들
                candidate = df_wines.loc[(df_wines.cluster==4) & (df_wines.type_id==24),:]
            else:
                candidate = df_wines.loc[df_wines.type_id==24,:] # 이외에 다른음식이 들어오면 주정강화 와인 전체에서 추출
            
        # 입력값을 바로 가중치로
        candidate['taste_score'] = sweet*candidate.sweetness + tannin*candidate.tannin + body*candidate.body + acidity*candidate.acidity
        candidate = candidate.sort_values('taste_score', ascending=False).copy()

        # 입력값이 중앙에서부터 먼 정도를 가중치로
        candidate['taste_score'] = abs(sweet-3)*candidate.sweetness + abs(tannin-3)*candidate.tannin + abs(body-3)*candidate.body + abs(acidity-3)*candidate.acidity
        candidate = candidate.sort_values('taste_score', ascending=False).copy()

        wine_ids = list(candidate.sort_values(['rating_average', 'review_count'], ascending=False)['wine_id'][:10].values)
        return wine_ids
    
result = get_recommendation(1, 'Pork', 3, 2, 3, 5)

result = get_recommendation(4, 'Fruity desserts', 3, 2, 3, 5)
print(result)
df_wines[df_wines.wine_id.isin(result)][['wine_id','cluster','type_id','sweetness','tannin','body','acidity','alcohol','food','grapes','rating_count','rating_average','review_count']]